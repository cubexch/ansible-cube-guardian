---
# tasks file for guardian

- name: Create Guardian User
  ansible.builtin.user:
    name: "{{ guardian_user.name }}"
    create_home: "{{ guardian_user.create_home | bool }}"
    password: "{{ guardian_user.password }}"
    groups: "syslog"
    append: true
    shell: "{{ guardian_user.shell }}"
    system: "{{ guardian_user.system | bool }}"

- name: Gather default_ipv4 facts
  ansible.builtin.setup:
    gather_subset:
      - default_ipv4

- name: Create install and config dirs
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: "u+rw,g+r,o=-"
  with_items:
    - "{{ guardian_dirs.install }}"
    - "{{ guardian_dirs.install }}/v{{ guardian_version }}"
    - "{{ guardian_dirs.config }}"

- name: Create install and config dirs
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: "u+rw,go+r"
  with_items:
    - "{{ guardian_dirs.log }}"

- name: Copy Guardian release
  ansible.builtin.copy:
    src: "{{ guardian_archive_name }}"
    dest: "{{ guardian_dirs.install }}/"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-

- name: Extract Guardian release
  ansible.builtin.unarchive:
    src: "{{ guardian_dirs.install }}/{{ guardian_archive_name }}"
    remote_src: true
    dest: "{{ guardian_dirs.install }}/v{{ guardian_version }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    creates: "{{ guardian_dirs.install }}/v{{ guardian_version }}/{{ guardian_bin_name }}"
  notify:
    - Restart guardian service

- name: Update symlinks for bins
  ansible.builtin.file:
    src: "{{ guardian_dirs.install }}/v{{ guardian_version }}"
    dest: "{{ guardian_dirs.install }}/current"
    state: link
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
  notify:
    - Restart guardian service

- name: Copy Vault CA Cert (Local to Remote)
  ansible.builtin.copy:
    src: "{{ self_signed_certs_local_dir }}/{{ vault_cluster_fqdn }}/{{ self_signed_cert_files.ca_cert }}"
    dest: "{{ guardian_dirs.config }}/{{ self_signed_cert_files.ca_cert }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-
  when:
    - self_signed_certs_local_dir is defined
  tags:
    - molecule-notest

- name: Copy Vault CA Cert (Remote to Config Path)
  ansible.builtin.copy:
    src: "{{ guardian_key_storage.hashicorp_vault.vault_tls_client_ca_remote_source_dir }}/{{ item }}"
    remote_src: true
    dest: "{{ guardian_dirs.config }}/{{ item }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-
  with_items:
    - "{{ guardian_key_storage.hashicorp_vault.vault_tls_client_ca_filename }}"
  when:
    - guardian_key_storage.hashicorp_vault.vault_tls_client_ca_remote_source_dir is defined
  tags:
    - molecule-notest

- name: Copy Remote Guardian Certificates to Config Dir
  no_log: true
  ansible.builtin.copy:
    src: "{{ guardian_certificates.remote_path }}/{{ item }}"
    remote_src: true
    dest: "{{ guardian_dirs.config }}/{{ item }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,go=-
  with_items:
    - "{{ guardian_certificates.tls_private_key_name }}"
    - "{{ guardian_certificates.tls_certificate_name }}"
    - "{{ guardian_certificates.tls_root_certificate_name }}"
  tags:
    - molecule-notest
  notify:
    - Restart guardian service

- name: Copy CA Bundle to Config Dir
  ansible.builtin.copy:
    src: "{{ guardian_ca_bundle_file }}"
    dest: "{{ guardian_dirs.config }}/{{ guardian_ca_bundle_file }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,go=-
  when: guardian_use_ca_bundle | default(false) | bool
  notify:
    - Restart guardian service

- name: Find Remote Vault AppRole Credentials
  no_log: true
  ansible.builtin.find:
    paths: "{{ cube_vault_configs_dir }}"
    patterns: "*.json"
  register: remote_approles
  when: cube_vault_configs_dir is defined
  tags:
    - deploy_approles

- name: Copy Remote Vault AppRole Credentials to Config Dir
  no_log: true
  ansible.builtin.copy:
    src: "{{ item.path }}"
    remote_src: true
    dest: "{{ guardian_dirs.config }}/"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: "u=rw,go=-"
  with_items:
    - "{{ remote_approles.files }}"
  when: guardian_approle_copy_remote_src is defined
  tags:
    - deploy_approles

- name: Deploy Guardian Config
  ansible.builtin.template:
    src: "production-instance.toml.j2"
    dest: "{{ guardian_dirs.config }}/production-{{ guardian_instance.guardian_id }}.toml"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-
    backup: true
  tags:
    - guardian_config
  notify:
    - Restart guardian service

- name: Deploy Guardian Monitor KYT Token
  no_log: true
  ansible.builtin.copy:
    content: "{{ guardian_monitor.kyt_token_file_content }}"
    dest: "{{ guardian_monitor.kyt_token_file }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-
  when:
    - guardian_monitor is defined
  notify:
    - Restart guardian service

- name: Deploy Guardian Monitor BTC RPC Auth
  no_log: true
  ansible.builtin.copy:
    content: "{{ guardian_monitor.btc.rpc_cookie_file_content }}"
    dest: "{{ guardian_monitor.btc.rpc_cookie_file }}"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-
  when:
    - guardian_monitor is defined
  notify:
    - Restart guardian service

- name: Deploy Service Environment Variables
  no_log: true
  ansible.builtin.template:
    src: "guardian-instance.service.env.j2"
    dest: "{{ guardian_dirs.config }}/guardian-{{ guardian_instance.guardian_id }}.service.env"
    owner: "{{ guardian_user.name }}"
    group: "{{ guardian_user.group }}"
    mode: u=rw,g=r,o=-
  notify:
    - Restart guardian service

- name: Deploy Service File
  ansible.builtin.template:
    src: "etc/systemd/system/guardian-instance.service.j2"
    dest: "/etc/systemd/system/guardian-{{ guardian_instance.guardian_id }}.service"
    owner: "root"
    group: "root"
    mode: ug=rw,o=r
  notify:
    - Restart guardian service

- name: Install iptables if guardian_listen_node_port_open_iptables is true
  ansible.builtin.apt:
    name:
      - iptables
    state: "present"
    cache_valid_time: 14400 # 4hrs
  when:
    - guardian_listen_node_port_open_iptables | default(false) | bool == true

- name: Open Firewall Rule - Node Port
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ guardian_listen_node_port | int }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
  when:
    - guardian_listen_node_port_open_iptables | default(false) | bool == true

- name: Open Firewall Rule - Web Port
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ guardian_listen_web_port | int }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
  when:
    - guardian_listen_web_port_open_iptables | default(false) | bool == true

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  tags:
    - molecule-notest

- name: Good job, you get to rest for a minute...
  ansible.builtin.wait_for:
    timeout: 60

- name: Ensure guardian service started
  ansible.builtin.systemd:
    name: guardian-{{ guardian_instance.guardian_id }}.service
    state: "{{ guardian_service_state | default('started') }}"
  tags:
    - molecule-notest
